import { EdgeList } from "../../../GraphStructure";

let E = [
  [
    [0, 1],
    [0, 2],
    [0, 3],
    [1, 2],
    [1, 3],
    [2, 3],
    [3, 4],
    [4, 5],
    [4, 6],
    [4, 7],
    [5, 6],
    [5, 7],
    [6, 7]
  ],
  [
    [0, 1],
    [0, 2],
    [0, 3],
    [0, 4],
    [0, 5],
    [0, 6],
    [0, 7],
    [1, 2],
    [2, 3],
    [3, 4],
    [4, 5],
    [4, 7],
    [6, 7],
    [6, 8],
    [7, 8],
    [8, 9],
    [8, 10],
    [8, 11],
    [9, 10],
    [9, 11],
    [10, 11],
    [11, 12],
    [11, 13],
    [11, 14],
    [11, 15],
    [12, 13],
    [12, 15],
    [12, 16],
    [13, 14],
    [13, 16],
    [13, 17],
    [14, 15],
    [14, 17]
  ],
  [
    [0, 1],
    [0, 2],
    [0, 3],
    [0, 4],
    [1, 2],
    [1, 3],
    [1, 4],
    [2, 3],
    [2, 4],
    [3, 4]
  ],
  [
    [0, 1],
    [0, 2],
    [0, 3],
    [1, 2],
    [1, 3],
    [1, 4],
    [2, 3],
    [2, 4],
    [3, 4]
  ],
  [
    [0, 1],
    [0, 3],
    [0, 5],
    [2, 1],
    [2, 3],
    [2, 5],
    [4, 1],
    [4, 3],
    [4, 5]
  ],
  [
    [0, 1],
    [0, 3],
    [0, 5],
    [2, 1],
    [2, 3],
    [2, 5],
    [4, 1],
    [4, 3]
  ],
  [
    [0, 1],
    [0, 2],
    [0, 3],
    [1, 2],
    [1, 3],
    [2, 3],
    [0, 0],
    [1, 1],
    [2, 2],
    [3, 3],
    [4, 4],
    [5, 5],
    [6, 6],
    [7, 7],
    [4, 5],
    [4, 6],
    [4, 7],
    [5, 6],
    [5, 7],
    [6, 7],
    [3, 7]
  ]
].map(edges => edges.map(([s, t]) => ({ source: s, target: t, datum: {} })));
let V = [8, 18, 5, 5, 6, 6, 8];
let G: EdgeList[] = E.map((edges, i) => new EdgeList(V[i], edges));
let A = [true, true, false, true, false, true, true];
//  K4-K4, textbook, K5, K5 - e, K{3,3}, K{3,3} - e

export { G, A };
